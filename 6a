#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

// Function to insert a node at the beginning of a list
void insertAtBeginning(struct Node** head_ref, int new_data) {
    struct Node* new_node = (struct Node*)malloc(sizeof(struct Node));
    new_node->data = new_data;
    new_node->next = *head_ref;
    *head_ref = new_node;
}

// Function to display the linked list
void displayList(struct Node* node) {
    while (node != NULL) {
        printf("%d ", node->data);
        node = node->next;
    }
    printf("\n");
}

int main() {
    struct Node* head = NULL;
    int choice, data, position;
   
    do {
        printf("1. Insert at beginning\n");
        printf("2. Insert after a node\n");
        printf("3. Insert at end\n");
        printf("4. Find an element\n");
        printf("5. Find next\n");
        printf("6. Find previous\n");
        printf("7. Check if last\n");
        printf("8. Check if empty\n");
        printf("9. Delete from beginning\n");
        printf("10. Delete after a node\n");
        printf("11. Delete from end\n");
        printf("12. Delete the list\n");
        printf("13. Display\n");
        printf("14. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch(choice) {
            case 1:
                printf("Enter data to insert at beginning: ");
                scanf("%d", &data);
                insertAtBeginning(&head, data);
                break;
            case 13:
                printf("Linked List: ");
                displayList(head);
                break;
            case 14:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice! Please enter a valid option.\n");
        }
    } while(choice != 14);

    return 0;
}
